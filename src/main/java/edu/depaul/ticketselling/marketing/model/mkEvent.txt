package edu.depaul.ticketselling.marketing.model;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@AllArgsConstructor
@NoArgsConstructor
@JsonIgnoreProperties({"hibernateLazyInitializer"})
@Builder
@Entity
@Table(name = "events")
public class Event {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long eventId;

    @Column(nullable = false, length = 50, unique = true)
    private String eventName;

    @Column(nullable = false, length = 50)
    private String artist;

    @Column(nullable = false, name = "date_time")
    private LocalDateTime dateTime;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "venue_id", nullable = false)
    private Venue venue;

    public String getVenueAddress() {
        return venue.getAddress();
    }

    public String getVenueName() {
        return venue.getVenueName();
    }

    public LocalDate getEventDate() {
        return dateTime.toLocalDate();
    }

    public LocalTime getEventTime() {
        return dateTime.toLocalTime();
    }

    @Override
    public String toString() {
        return String.format("%s%n%s%n%s at %s%n%s%n%s",
                eventName,
                artist,
                getEventDate(),
                getEventTime(),
                getVenueName(),
                getVenueAddress());
    }

}
